diff -up ssr-0.4.3/src/AV/Output/AudioEncoder.cpp.omv~ ssr-0.4.3/src/AV/Output/AudioEncoder.cpp
--- ssr-0.4.3/src/AV/Output/AudioEncoder.cpp.omv~	2022-01-16 02:32:00.244967451 +0100
+++ ssr-0.4.3/src/AV/Output/AudioEncoder.cpp	2022-01-16 02:36:59.943283048 +0100
@@ -34,7 +34,7 @@ const std::vector<AudioEncoder::SampleFo
 
 const unsigned int AudioEncoder::DEFAULT_FRAME_SAMPLES = 1024;
 
-AudioEncoder::AudioEncoder(Muxer* muxer, AVStream* stream, AVCodecContext *codec_context, AVCodec* codec, AVDictionary** options)
+AudioEncoder::AudioEncoder(Muxer* muxer, AVStream* stream, AVCodecContext *codec_context, const AVCodec* codec, AVDictionary** options)
 	: BaseEncoder(muxer, stream, codec_context, codec, options) {
 
 #if !SSR_USE_AVCODEC_ENCODE_AUDIO2
@@ -77,7 +77,7 @@ unsigned int AudioEncoder::GetSampleRate
 }
 
 bool AudioEncoder::AVCodecIsSupported(const QString& codec_name) {
-	AVCodec *codec = avcodec_find_encoder_by_name(codec_name.toUtf8().constData());
+	const AVCodec *codec = avcodec_find_encoder_by_name(codec_name.toUtf8().constData());
 	if(codec == NULL)
 		return false;
 	if(!av_codec_is_encoder(codec))
@@ -93,7 +93,7 @@ bool AudioEncoder::AVCodecIsSupported(co
 	return false;
 }
 
-void AudioEncoder::PrepareStream(AVStream* stream, AVCodecContext* codec_context, AVCodec* codec, AVDictionary** options, const std::vector<std::pair<QString, QString> >& codec_options,
+void AudioEncoder::PrepareStream(AVStream* stream, AVCodecContext* codec_context, const AVCodec* codec, AVDictionary** options, const std::vector<std::pair<QString, QString> >& codec_options,
 								 unsigned int bit_rate, unsigned int channels, unsigned int sample_rate) {
 
 	if(channels == 0) {
diff -up ssr-0.4.3/src/AV/Output/AudioEncoder.h.omv~ ssr-0.4.3/src/AV/Output/AudioEncoder.h
--- ssr-0.4.3/src/AV/Output/AudioEncoder.h.omv~	2022-01-16 02:36:36.864182151 +0100
+++ ssr-0.4.3/src/AV/Output/AudioEncoder.h	2022-01-16 02:36:47.842230151 +0100
@@ -40,7 +40,7 @@ private:
 #endif
 
 public:
-	AudioEncoder(Muxer* muxer, AVStream* stream, AVCodecContext* codec_context, AVCodec* codec, AVDictionary** options);
+	AudioEncoder(Muxer* muxer, AVStream* stream, AVCodecContext* codec_context, const AVCodec* codec, AVDictionary** options);
 	~AudioEncoder();
 
 	// Returns the required frame size, i.e. the number of samples (for each channel).
@@ -57,7 +57,7 @@ public:
 
 public:
 	static bool AVCodecIsSupported(const QString& codec_name);
-	static void PrepareStream(AVStream* stream, AVCodecContext* codec_context, AVCodec* codec, AVDictionary** options, const std::vector<std::pair<QString, QString> >& codec_options,
+	static void PrepareStream(AVStream* stream, AVCodecContext* codec_context, const AVCodec* codec, AVDictionary** options, const std::vector<std::pair<QString, QString> >& codec_options,
 							  unsigned int bit_rate, unsigned int channels, unsigned int sample_rate);
 
 private:
diff -up ssr-0.4.3/src/AV/Output/BaseEncoder.cpp.omv~ ssr-0.4.3/src/AV/Output/BaseEncoder.cpp
--- ssr-0.4.3/src/AV/Output/BaseEncoder.cpp.omv~	2022-01-16 02:36:18.551102049 +0100
+++ ssr-0.4.3/src/AV/Output/BaseEncoder.cpp	2022-01-16 02:38:04.744566057 +0100
@@ -42,7 +42,7 @@ double ParseCodecOptionDouble(const QStr
 	return clamp(value_double, min, max) * multiply;
 }
 
-BaseEncoder::BaseEncoder(Muxer* muxer, AVStream* stream, AVCodecContext* codec_context, AVCodec* codec, AVDictionary** options) {
+BaseEncoder::BaseEncoder(Muxer* muxer, AVStream* stream, AVCodecContext* codec_context, const AVCodec* codec, AVDictionary** options) {
 
 	m_muxer = muxer;
 	m_stream = stream;
@@ -157,7 +157,7 @@ void BaseEncoder::IncrementPacketCounter
 	++lock->m_total_packets;
 }
 
-void BaseEncoder::Init(AVCodec* codec, AVDictionary** options) {
+void BaseEncoder::Init(const AVCodec* codec, AVDictionary** options) {
 
 	// open codec
 	if(avcodec_open2(m_codec_context, codec, options) < 0) {
diff -up ssr-0.4.3/src/AV/Output/BaseEncoder.h.omv~ ssr-0.4.3/src/AV/Output/BaseEncoder.h
--- ssr-0.4.3/src/AV/Output/BaseEncoder.h.omv~	2022-01-16 02:36:07.893055413 +0100
+++ ssr-0.4.3/src/AV/Output/BaseEncoder.h	2022-01-16 02:37:59.136541581 +0100
@@ -51,7 +51,7 @@ private:
 	std::atomic<bool> m_should_stop, m_should_finish, m_is_done, m_error_occurred;
 
 protected:
-	BaseEncoder(Muxer* muxer, AVStream* stream, AVCodecContext* codec_context, AVCodec* codec, AVDictionary** options);
+	BaseEncoder(Muxer* muxer, AVStream* stream, AVCodecContext* codec_context, const AVCodec* codec, AVDictionary** options);
 
 public:
 	virtual ~BaseEncoder(); // encoders will be deleted by Muxer, don't delete them yourself!
@@ -117,7 +117,7 @@ protected:
 	void IncrementPacketCounter();
 
 private:
-	void Init(AVCodec* codec, AVDictionary** options);
+	void Init(const AVCodec* codec, AVDictionary** options);
 	void Free();
 
 	void EncoderThread();
diff -up ssr-0.4.3/src/AV/Output/Muxer.cpp.omv~ ssr-0.4.3/src/AV/Output/Muxer.cpp
--- ssr-0.4.3/src/AV/Output/Muxer.cpp.omv~	2022-01-16 02:32:27.481087577 +0100
+++ ssr-0.4.3/src/AV/Output/Muxer.cpp	2022-01-16 02:34:20.533584864 +0100
@@ -87,7 +87,7 @@ Muxer::~Muxer() {
 
 VideoEncoder* Muxer::AddVideoEncoder(const QString& codec_name, const std::vector<std::pair<QString, QString> >& codec_options,
 									 unsigned int bit_rate, unsigned int width, unsigned int height, unsigned int frame_rate) {
-	AVCodec *codec = FindCodec(codec_name);
+	const AVCodec *codec = FindCodec(codec_name);
 	AVCodecContext *codec_context = NULL;
 	AVStream *stream = AddStream(codec, &codec_context);
 	VideoEncoder *encoder;
@@ -111,7 +111,7 @@ VideoEncoder* Muxer::AddVideoEncoder(con
 
 AudioEncoder* Muxer::AddAudioEncoder(const QString& codec_name, const std::vector<std::pair<QString, QString> >& codec_options,
 									 unsigned int bit_rate, unsigned int channels, unsigned int sample_rate) {
-	AVCodec *codec = FindCodec(codec_name);
+	const AVCodec *codec = FindCodec(codec_name);
 	AVCodecContext *codec_context = NULL;
 	AVStream *stream = AddStream(codec, &codec_context);
 	AudioEncoder *encoder;
@@ -194,7 +194,7 @@ unsigned int Muxer::GetQueuedPacketCount
 void Muxer::Init() {
 
 	// get the format we want (this is just a pointer, we don't have to free this)
-	AVOutputFormat *format = av_guess_format(m_container_name.toUtf8().constData(), NULL, NULL);
+	const AVOutputFormat *format = av_guess_format(m_container_name.toUtf8().constData(), NULL, NULL);
 	if(format == NULL) {
 		Logger::LogError("[Muxer::Init] " + Logger::tr("Error: Can't find chosen output format!"));
 		throw LibavException();
@@ -261,8 +261,8 @@ void Muxer::Free() {
 	}
 }
 
-AVCodec* Muxer::FindCodec(const QString& codec_name) {
-	AVCodec *codec = avcodec_find_encoder_by_name(codec_name.toUtf8().constData());
+const AVCodec* Muxer::FindCodec(const QString& codec_name) {
+	const AVCodec *codec = avcodec_find_encoder_by_name(codec_name.toUtf8().constData());
 	if(codec == NULL) {
 		Logger::LogError("[Muxer::FindCodec] " + Logger::tr("Error: Can't find codec!"));
 		throw LibavException();
@@ -270,7 +270,7 @@ AVCodec* Muxer::FindCodec(const QString&
 	return codec;
 }
 
-AVStream* Muxer::AddStream(AVCodec* codec, AVCodecContext** codec_context) {
+AVStream* Muxer::AddStream(const AVCodec* codec, AVCodecContext** codec_context) {
 	assert(!m_started);
 	assert(m_format_context->nb_streams < MUXER_MAX_STREAMS);
 
diff -up ssr-0.4.3/src/AV/Output/Muxer.h.omv~ ssr-0.4.3/src/AV/Output/Muxer.h
--- ssr-0.4.3/src/AV/Output/Muxer.h.omv~	2022-01-16 02:33:13.706291156 +0100
+++ ssr-0.4.3/src/AV/Output/Muxer.h	2022-01-16 02:34:25.480606580 +0100
@@ -114,8 +114,8 @@ private:
 	void Init();
 	void Free();
 
-	AVCodec* FindCodec(const QString& codec_name);
-	AVStream* AddStream(AVCodec* codec, AVCodecContext** codec_context);
+	const AVCodec* FindCodec(const QString& codec_name);
+	AVStream* AddStream(const AVCodec* codec, AVCodecContext** codec_context);
 
 	void MuxerThread();
 
diff -up ssr-0.4.3/src/AV/Output/VideoEncoder.cpp.omv~ ssr-0.4.3/src/AV/Output/VideoEncoder.cpp
--- ssr-0.4.3/src/AV/Output/VideoEncoder.cpp.omv~	2022-01-16 02:32:09.380007757 +0100
+++ ssr-0.4.3/src/AV/Output/VideoEncoder.cpp	2022-01-16 02:36:03.457035998 +0100
@@ -34,7 +34,7 @@ const std::vector<VideoEncoder::PixelFor
 	{"rgb", AV_PIX_FMT_RGB24, false},
 };
 
-VideoEncoder::VideoEncoder(Muxer* muxer, AVStream* stream, AVCodecContext* codec_context, AVCodec* codec, AVDictionary** options)
+VideoEncoder::VideoEncoder(Muxer* muxer, AVStream* stream, AVCodecContext* codec_context, const AVCodec* codec, AVDictionary** options)
 	: BaseEncoder(muxer, stream, codec_context, codec, options) {
 
 #if !SSR_USE_AVCODEC_ENCODE_VIDEO2
@@ -95,7 +95,7 @@ unsigned int VideoEncoder::GetFrameRate(
 }
 
 bool VideoEncoder::AVCodecIsSupported(const QString& codec_name) {
-	AVCodec *codec = avcodec_find_encoder_by_name(codec_name.toUtf8().constData());
+	const AVCodec *codec = avcodec_find_encoder_by_name(codec_name.toUtf8().constData());
 	if(codec == NULL)
 		return false;
 	if(!av_codec_is_encoder(codec))
@@ -111,7 +111,7 @@ bool VideoEncoder::AVCodecIsSupported(co
 	return false;
 }
 
-void VideoEncoder::PrepareStream(AVStream* stream, AVCodecContext* codec_context, AVCodec* codec, AVDictionary** options, const std::vector<std::pair<QString, QString> >& codec_options,
+void VideoEncoder::PrepareStream(AVStream* stream, AVCodecContext* codec_context, const AVCodec* codec, AVDictionary** options, const std::vector<std::pair<QString, QString> >& codec_options,
 								 unsigned int bit_rate, unsigned int width, unsigned int height, unsigned int frame_rate) {
 
 	if(width == 0 || height == 0) {
diff -up ssr-0.4.3/src/AV/Output/VideoEncoder.h.omv~ ssr-0.4.3/src/AV/Output/VideoEncoder.h
--- ssr-0.4.3/src/AV/Output/VideoEncoder.h.omv~	2022-01-16 02:35:04.802779074 +0100
+++ ssr-0.4.3/src/AV/Output/VideoEncoder.h	2022-01-16 02:35:50.456979089 +0100
@@ -40,7 +40,7 @@ private:
 #endif
 
 public:
-	VideoEncoder(Muxer* muxer, AVStream* stream, AVCodecContext* codec_context, AVCodec* codec, AVDictionary** options);
+	VideoEncoder(Muxer* muxer, AVStream* stream, AVCodecContext* codec_context, const AVCodec* codec, AVDictionary** options);
 	~VideoEncoder();
 
 	// Returns the required pixel format.
@@ -55,7 +55,7 @@ public:
 
 public:
 	static bool AVCodecIsSupported(const QString& codec_name);
-	static void PrepareStream(AVStream* stream, AVCodecContext* codec_context, AVCodec* codec, AVDictionary** options, const std::vector<std::pair<QString, QString> >& codec_options,
+	static void PrepareStream(AVStream* stream, AVCodecContext* codec_context, const AVCodec* codec, AVDictionary** options, const std::vector<std::pair<QString, QString> >& codec_options,
 							  unsigned int bit_rate, unsigned int width, unsigned int height, unsigned int frame_rate);
 
 private:
